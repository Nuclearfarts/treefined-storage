plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
}

configurations {
	eclipseAp
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	eclipseAp "io.github.nuclearfarts:minecraft-ap:0.2.0:all"
	compileOnly "io.github.nuclearfarts:minecraft-ap:0.2.0"
	annotationProcessor configurations.eclipseAp;
}

def buildDir = projectDir.toString().replace('\\', '/');
task apPath {
	doLast {
		new File(projectDir, ".factorypath").text = '<factorypath><factorypathentry kind="EXTJAR" id="' + configurations.eclipseAp.files[0] + '" enabled="true" runInBatchMode="false"/></factorypath>'
		new File(projectDir, ".settings").mkdir();
		new File(projectDir, ".settings/org.eclipse.jdt.apt.core.prefs").text = """
			eclipse.preferences.version=1
			org.eclipse.jdt.apt.aptEnabled=true
			org.eclipse.jdt.apt.processorOptions/buildDir=${buildDir}
			org.eclipse.jdt.apt.processorOptions/isDev=true
			org.eclipse.jdt.apt.genSrcDir=.apt_generated
			org.eclipse.jdt.apt.genTestSrcDir=.apt_generated_tests
			org.eclipse.jdt.apt.reconcileEnabled=true
		"""
	}
}

def compileTask = project.tasks[sourceSets.main.compileJavaTaskName]
compileTask.doFirst {
	compileTask.options.compilerArgs += ["-AbuildDir=${buildDir}"]
}

tasks.eclipse.dependsOn(apPath)

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		mavenLocal()
	}
}
